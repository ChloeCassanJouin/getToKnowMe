# 🐛 Débogage : erreur au démarrage d’un projet React + Vite

## 🔍 Contexte
Lors de la mise en route d’un projet React avec Vite (`npm install` + `npm run dev`), plusieurs erreurs sont apparues, empêchant le rendu de l’application dans le navigateur (`localhost:5173` ou autre port).

---

## ❌ Erreur 1 : `500 Internal Server Error` sur un fichier `.jsx`

### 💬 Message
Failed to load resource: the server responded with a status of 500 (Internal Server Error)

markdown
Copier
Modifier

### 🧭 Diagnostic
Le fichier `.jsx` est invalide ou corrompu. Possibilités :
- Encodage incorrect (UTF-8 mal interprété)
- Caractères invisibles en début de fichier (Byte Order Mark)
- Plugin React incapable de reconnaître le “preamble” du fichier (voir [ce bug](https://github.com/vitejs/vite-plugin-react/pull/11#discussion_r430879201))

### ✅ Solution
- Supprimer le fichier concerné
- Le recréer manuellement avec un contenu minimal
- Vérifier l'encodage : `UTF-8` sans BOM
- Éviter les copier-coller depuis des sources mal encodées

---

## ❌ Erreur 2 : `React is not defined`

### 💬 Message
Uncaught ReferenceError: React is not defined

python
Copier
Modifier

### 🧭 Diagnostic
Le JSX (ex. `<StrictMode>`) est utilisé sans avoir explicitement importé `React`.

### ✅ Solution
Ajouter en haut du fichier :
```js
import React from 'react';
❌ Erreur 3 : Mauvaise casse dans les chemins d’import
💬 Message
Pas d’erreur claire, mais l’application reste vide ou plante silencieusement.

🧭 Diagnostic
Exemple :

js
Copier
Modifier
import App from './App.jsx'; // mais le fichier s’appelle app.jsx
Les imports ES sont sensibles à la casse, contrairement à Windows.

✅ Solution
Vérifier que le nom du fichier correspond exactement à l’import

Renommer si besoin (App.jsx, pas app.jsx)

❌ Problème global persistant : application non réactive
✅ Solution recommandée
Supprimer :

bash
Copier
Modifier
rm -rf node_modules
rm -rf .vite
rm package-lock.json
Réinstaller :

bash
Copier
Modifier
npm install
Relancer :

bash
Copier
Modifier
npm run dev
✅ Résultat final
L'application démarre sans erreur. Le message de test s’affiche, confirmant que React, Vite, les composants et le JSX fonctionnent comme prévu.

📘 Leçon à retenir
Toujours vérifier l'encodage et la casse des fichiers

Penser aux plugins Vite qui peuvent bloquer silencieusement

Supprimer le cache en cas d’erreur inexpliquée

Réinstaller proprement le projet si besoin (reset complet)

yaml
Copier
Modifier
